{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VEDANTI\\\\Documents\\\\VS_Code_Programs\\\\meme-generator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://freepngimg.com/thumb/meme/98035-shiba-inu-doge-meme-free-clipart-hq.png\",\n      alt: \"meme logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"nav--heading\",\n      children: \"Meme Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"nav--corner\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Navbar;\nfunction MemeComponent() {\n  _s();\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"https://i.imgflip.com/30b1gx.jpg\"\n  });\n  const [allMemes, setAllMemes] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setAllMemes(data.data.memes));\n  }, []);\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() + allMemes.length);\n    const meme_url = allMemes[randomNumber].url;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImage: meme_url\n    }));\n  }\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form--input\",\n        placeholder: \"Top text\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form--input\",\n        placeholder: \"Bottom text\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        alt: \"meme\",\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(MemeComponent, \"6w01xTLwirSO0rX5lfgXO3JhIvA=\");\n_c2 = MemeComponent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MemeComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"MemeComponent\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Navbar","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","MemeComponent","_s","meme","setMeme","topText","bottomText","randomImage","allMemes","setAllMemes","fetch","then","res","json","data","memes","getMemeImage","randomNumber","Math","floor","random","length","meme_url","url","prevMeme","handleChange","event","name","value","target","type","placeholder","onChange","onClick","_c2","App","_c3","$RefreshReg$"],"sources":["C:/Users/VEDANTI/Documents/VS_Code_Programs/meme-generator/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useEffect, useState} from 'react';\n\nfunction Navbar() {\n  return (\n    <nav>\n      <img src=\"https://freepngimg.com/thumb/meme/98035-shiba-inu-doge-meme-free-clipart-hq.png\" alt='meme logo' />\n      <h2 className='nav--heading'>Meme Generator</h2>\n      <h4 className='nav--corner'>Home</h4>\n    </nav>\n  )\n}\n\nfunction MemeComponent() {\nconst [meme, setMeme] = useState({\n  topText: \"\",\n  bottomText: \"\",\n  randomImage: \"https://i.imgflip.com/30b1gx.jpg\"\n})\n\n  const [allMemes, setAllMemes] = useState([])\n\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then(res => res.json())\n      .then(data => setAllMemes(data.data.memes))\n  }, [])\n\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() + allMemes.length)\n    const meme_url = allMemes[randomNumber].url\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImage: meme_url\n    }))\n  }\n\n  function handleChange(event) {\n    const {name, value} = event.target\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      [name]: value\n    }))\n  }\n\n  return (\n    <main>\n      <div className='form'>\n        <input type=\"text\" className='form--input' placeholder='Top text' name=\"topText\" value={meme.topText} onChange={handleChange}/>\n        <input type=\"text\" className='form--input' placeholder='Bottom text' name=\"bottomText\" value={meme.bottomText} onChange={handleChange}/>\n        <button className='form--button' onClick={getMemeImage}>Get a new meme image</button>\n      </div>\n      <div className='meme'>\n        <img src={meme.randomImage} alt=\"meme\" className='meme--image'/>\n        <h2 className='meme--text top'>{meme.topText}</h2>\n        <h2 className='meme--text bottom'>{meme.bottomText}</h2>\n      </div>\n    </main>\n  )\n}\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <MemeComponent />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}